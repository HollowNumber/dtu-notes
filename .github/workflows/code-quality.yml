name: Code Quality

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  clippy:
    name: Clippy Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run Clippy
        run: |
          cargo clippy --all-targets --all-features --message-format=json | \
          jq -r '.message.rendered // empty' | \
          tee clippy-results.txt

      - name: Upload Clippy results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: clippy-results
          path: clippy-results.txt

  doc-check:
    name: Documentation Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Check documentation
        run: |
          echo "## Documentation Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Generate docs and check for warnings
          cargo doc --no-deps --document-private-items 2>&1 | tee doc-output.txt

          if grep -q "warning" doc-output.txt; then
            echo "⚠️ **Documentation warnings found**" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            grep "warning" doc-output.txt >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ **No documentation warnings**" >> $GITHUB_STEP_SUMMARY
          fi

  unused-deps:
    name: Check Unused Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Install cargo-machete
        run: cargo install cargo-machete

      - name: Check for unused dependencies
        continue-on-error: true
        run: |
          echo "## Unused Dependencies Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          cargo machete 2>&1 | tee unused-deps.txt || true

          if [ -s unused-deps.txt ]; then
            echo "⚠️ **Potentially unused dependencies found**" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            cat unused-deps.txt >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ **No unused dependencies detected**" >> $GITHUB_STEP_SUMMARY
          fi
